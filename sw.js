!function(){function e(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}function t(e){return e&&e.__esModule?e.default:e}var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},o={},i=n.parcelRequire194d;null==i&&((i=function(e){if(e in r)return r[e].exports;if(e in o){var t=o[e];delete o[e];var n={id:e,exports:{}};return r[e]=n,t.call(n.exports,n,n.exports),n.exports}var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){o[e]=t},n.parcelRequire194d=i),i.register("enmjz",function(t,n){e(t.exports,"Children",function(){return r},function(e){return r=e}),e(t.exports,"Component",function(){return o},function(e){return o=e}),e(t.exports,"Fragment",function(){return i},function(e){return i=e}),e(t.exports,"Profiler",function(){return u},function(e){return u=e}),e(t.exports,"PureComponent",function(){return a},function(e){return a=e}),e(t.exports,"StrictMode",function(){return c},function(e){return c=e}),e(t.exports,"Suspense",function(){return f},function(e){return f=e}),e(t.exports,"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",function(){return s},function(e){return s=e}),e(t.exports,"cloneElement",function(){return l},function(e){return l=e}),e(t.exports,"createContext",function(){return d},function(e){return d=e}),e(t.exports,"createElement",function(){return v},function(e){return v=e}),e(t.exports,"createFactory",function(){return h},function(e){return h=e}),e(t.exports,"createRef",function(){return p},function(e){return p=e}),e(t.exports,"forwardRef",function(){return y},function(e){return y=e}),e(t.exports,"isValidElement",function(){return b},function(e){return b=e}),e(t.exports,"lazy",function(){return m},function(e){return m=e}),e(t.exports,"memo",function(){return g},function(e){return g=e}),e(t.exports,"startTransition",function(){return _},function(e){return _=e}),e(t.exports,"unstable_act",function(){return S},function(e){return S=e}),e(t.exports,"useCallback",function(){return w},function(e){return w=e}),e(t.exports,"useContext",function(){return I},function(e){return I=e}),e(t.exports,"useDebugValue",function(){return E},function(e){return E=e}),e(t.exports,"useDeferredValue",function(){return x},function(e){return x=e}),e(t.exports,"useEffect",function(){return R},function(e){return R=e}),e(t.exports,"useId",function(){return j},function(e){return j=e}),e(t.exports,"useImperativeHandle",function(){return N},function(e){return N=e}),e(t.exports,"useInsertionEffect",function(){return O},function(e){return O=e}),e(t.exports,"useLayoutEffect",function(){return A},function(e){return A=e}),e(t.exports,"useMemo",function(){return k},function(e){return k=e}),e(t.exports,"useReducer",function(){return D},function(e){return D=e}),e(t.exports,"useRef",function(){return C},function(e){return C=e}),e(t.exports,"useState",function(){return T},function(e){return T=e}),e(t.exports,"useSyncExternalStore",function(){return B},function(e){return B=e}),e(t.exports,"useTransition",function(){return F},function(e){return F=e}),e(t.exports,"version",function(){return L},function(e){return L=e});var r,o,i,u,a,c,f,s,l,d,v,h,p,y,b,m,g,_,S,w,I,E,x,R,j,N,O,A,k,D,C,T,B,F,L,P=Symbol.for("react.element"),M=Symbol.for("react.portal"),U=Symbol.for("react.fragment"),z=Symbol.for("react.strict_mode"),q=Symbol.for("react.profiler"),H=Symbol.for("react.provider"),$=Symbol.for("react.context"),W=Symbol.for("react.forward_ref"),V=Symbol.for("react.suspense"),K=Symbol.for("react.memo"),Q=Symbol.for("react.lazy"),X=Symbol.iterator,Y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},G=Object.assign,J={};function Z(e,t,n){this.props=e,this.context=t,this.refs=J,this.updater=n||Y}function ee(){}function et(e,t,n){this.props=e,this.context=t,this.refs=J,this.updater=n||Y}Z.prototype.isReactComponent={},Z.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},Z.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},ee.prototype=Z.prototype;var en=et.prototype=new ee;en.constructor=et,G(en,Z.prototype),en.isPureReactComponent=!0;var er=Array.isArray,eo=Object.prototype.hasOwnProperty,ei={current:null},eu={key:!0,ref:!0,__self:!0,__source:!0};function ea(e,t,n){var r,o={},i=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(i=""+t.key),t)eo.call(t,r)&&!eu.hasOwnProperty(r)&&(o[r]=t[r]);var a=arguments.length-2;if(1===a)o.children=n;else if(1<a){for(var c=Array(a),f=0;f<a;f++)c[f]=arguments[f+2];o.children=c}if(e&&e.defaultProps)for(r in a=e.defaultProps)void 0===o[r]&&(o[r]=a[r]);return{$$typeof:P,type:e,key:i,ref:u,props:o,_owner:ei.current}}function ec(e){return"object"==typeof e&&null!==e&&e.$$typeof===P}var ef=/\/+/g;function es(e,t){var n,r;return"object"==typeof e&&null!==e&&null!=e.key?(n=""+e.key,r={"=":"=0",":":"=2"},"$"+n.replace(/[=:]/g,function(e){return r[e]})):t.toString(36)}function el(e,t,n){if(null==e)return e;var r=[],o=0;return function e(t,n,r,o,i){var u,a,c,f=typeof t;("undefined"===f||"boolean"===f)&&(t=null);var s=!1;if(null===t)s=!0;else switch(f){case"string":case"number":s=!0;break;case"object":switch(t.$$typeof){case P:case M:s=!0}}if(s)return i=i(s=t),t=""===o?"."+es(s,0):o,er(i)?(r="",null!=t&&(r=t.replace(ef,"$&/")+"/"),e(i,n,r,"",function(e){return e})):null!=i&&(ec(i)&&(u=i,a=r+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(ef,"$&/")+"/")+t,i={$$typeof:P,type:u.type,key:a,ref:u.ref,props:u.props,_owner:u._owner}),n.push(i)),1;if(s=0,o=""===o?".":o+":",er(t))for(var l=0;l<t.length;l++){var d=o+es(f=t[l],l);s+=e(f,n,r,d,i)}else if("function"==typeof(d=null===(c=t)||"object"!=typeof c?null:"function"==typeof(c=X&&c[X]||c["@@iterator"])?c:null))for(t=d.call(t),l=0;!(f=t.next()).done;)d=o+es(f=f.value,l++),s+=e(f,n,r,d,i);else if("object"===f)throw Error("Objects are not valid as a React child (found: "+("[object Object]"===(n=String(t))?"object with keys {"+Object.keys(t).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return s}(e,r,"","",function(e){return t.call(n,e,o++)}),r}function ed(e){if(-1===e._status){var t=e._result;(t=t()).then(function(t){(0===e._status||-1===e._status)&&(e._status=1,e._result=t)},function(t){(0===e._status||-1===e._status)&&(e._status=2,e._result=t)}),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var ev={current:null},eh={transition:null};r={map:el,forEach:function(e,t,n){el(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return el(e,function(){t++}),t},toArray:function(e){return el(e,function(e){return e})||[]},only:function(e){if(!ec(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},o=Z,i=U,u=q,a=et,c=z,f=V,s={ReactCurrentDispatcher:ev,ReactCurrentBatchConfig:eh,ReactCurrentOwner:ei},l=function(e,t,n){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=G({},e.props),o=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=ei.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var a=e.type.defaultProps;for(c in t)eo.call(t,c)&&!eu.hasOwnProperty(c)&&(r[c]=void 0===t[c]&&void 0!==a?a[c]:t[c])}var c=arguments.length-2;if(1===c)r.children=n;else if(1<c){a=Array(c);for(var f=0;f<c;f++)a[f]=arguments[f+2];r.children=a}return{$$typeof:P,type:e.type,key:o,ref:i,props:r,_owner:u}},d=function(e){return(e={$$typeof:$,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:H,_context:e},e.Consumer=e},v=ea,h=function(e){var t=ea.bind(null,e);return t.type=e,t},p=function(){return{current:null}},y=function(e){return{$$typeof:W,render:e}},b=ec,m=function(e){return{$$typeof:Q,_payload:{_status:-1,_result:e},_init:ed}},g=function(e,t){return{$$typeof:K,type:e,compare:void 0===t?null:t}},_=function(e){var t=eh.transition;eh.transition={};try{e()}finally{eh.transition=t}},S=function(){throw Error("act(...) is not supported in production builds of React.")},w=function(e,t){return ev.current.useCallback(e,t)},I=function(e){return ev.current.useContext(e)},E=function(){},x=function(e){return ev.current.useDeferredValue(e)},R=function(e,t){return ev.current.useEffect(e,t)},j=function(){return ev.current.useId()},N=function(e,t,n){return ev.current.useImperativeHandle(e,t,n)},O=function(e,t){return ev.current.useInsertionEffect(e,t)},A=function(e,t){return ev.current.useLayoutEffect(e,t)},k=function(e,t){return ev.current.useMemo(e,t)},D=function(e,t,n){return ev.current.useReducer(e,t,n)},C=function(e){return ev.current.useRef(e)},T=function(e){return ev.current.useState(e)},B=function(e,t,n){return ev.current.useSyncExternalStore(e,t,n)},F=function(){return ev.current.useTransition()},L="18.2.0"});let u=[],a="";u=["index.html","favicon.47681ad3.ico","site.webmanifest","icon-l.7082b16d.png","index.2dade6c0.js","index.6134c3ca.css","index.3b6d8c67.js"],a="48e77c0d";/// <reference lib="WebWorker" />
// export empty type because of tsc --isolatedModules flag
var c={};c=(function e(t,n,r){function o(u,a){if(!n[u]){if(!t[u]){var c=void 0;if(!a&&c)return c(u,!0);if(i)return i(u,!0);var f=Error("Cannot find module '"+u+"'");throw f.code="MODULE_NOT_FOUND",f}var s=n[u]={exports:{}};t[u][0].call(s.exports,function(e){return o(t[u][1][e]||e)},s,s.exports,e,t,n,r)}return n[u].exports}for(var i=void 0,u=0;u<r.length;u++)o(r[u]);return o})({1:[function(e,t,r){(function(e){var n,r,o=e.MutationObserver||e.WebKitMutationObserver;if(o){var i=0,u=new o(s),a=e.document.createTextNode("");u.observe(a,{characterData:!0}),n=function(){a.data=i=++i%2}}else if(e.setImmediate||void 0===e.MessageChannel)n="document"in e&&"onreadystatechange"in e.document.createElement("script")?function(){// Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
// into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
var t=e.document.createElement("script");t.onreadystatechange=function(){s(),t.onreadystatechange=null,t.parentNode.removeChild(t),t=null},e.document.documentElement.appendChild(t)}:function(){setTimeout(s,0)};else{var c=new e.MessageChannel;c.port1.onmessage=s,n=function(){c.port2.postMessage(0)}}var f=[];//named nextTick for less confusing stack traces
function s(){r=!0;for(var e,t,n=f.length;n;){for(t=f,f=[],e=-1;++e<n;)t[e]();n=f.length}r=!1}t.exports=function(e){1!==f.push(e)||r||n()}}).call(this,void 0!==n?n:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(e,t,n){var r=e(1);/* istanbul ignore next */function o(){}var i={},u=["REJECTED"],a=["FULFILLED"],c=["PENDING"];function f(e){if("function"!=typeof e)throw TypeError("resolver must be a function");this.state=c,this.queue=[],this.outcome=void 0,e!==o&&v(this,e)}function s(e,t,n){this.promise=e,"function"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),"function"==typeof n&&(this.onRejected=n,this.callRejected=this.otherCallRejected)}function l(e,t,n){r(function(){var r;try{r=t(n)}catch(t){return i.reject(e,t)}r===e?i.reject(e,TypeError("Cannot resolve promise with itself")):i.resolve(e,r)})}function d(e){// Make sure we only access the accessor once as required by the spec
var t=e&&e.then;if(e&&("object"==typeof e||"function"==typeof e)&&"function"==typeof t)return function(){t.apply(e,arguments)}}function v(e,t){// Either fulfill, reject or reject with error
var n=!1;function r(t){n||(n=!0,i.reject(e,t))}function o(t){n||(n=!0,i.resolve(e,t))}var u=h(function(){t(o,r)});"error"===u.status&&r(u.value)}function h(e,t){var n={};try{n.value=e(t),n.status="success"}catch(e){n.status="error",n.value=e}return n}t.exports=f,f.prototype.catch=function(e){return this.then(null,e)},f.prototype.then=function(e,t){if("function"!=typeof e&&this.state===a||"function"!=typeof t&&this.state===u)return this;var n=new this.constructor(o);return this.state!==c?l(n,this.state===a?e:t,this.outcome):this.queue.push(new s(n,e,t)),n},s.prototype.callFulfilled=function(e){i.resolve(this.promise,e)},s.prototype.otherCallFulfilled=function(e){l(this.promise,this.onFulfilled,e)},s.prototype.callRejected=function(e){i.reject(this.promise,e)},s.prototype.otherCallRejected=function(e){l(this.promise,this.onRejected,e)},i.resolve=function(e,t){var n=h(d,t);if("error"===n.status)return i.reject(e,n.value);var r=n.value;if(r)v(e,r);else{e.state=a,e.outcome=t;for(var o=-1,u=e.queue.length;++o<u;)e.queue[o].callFulfilled(t)}return e},i.reject=function(e,t){e.state=u,e.outcome=t;for(var n=-1,r=e.queue.length;++n<r;)e.queue[n].callRejected(t);return e},f.resolve=function(e){return e instanceof this?e:i.resolve(new this(o),e)},f.reject=function(e){var t=new this(o);return i.reject(t,e)},f.all=function(e){var t=this;if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(TypeError("must be an array"));var n=e.length,r=!1;if(!n)return this.resolve([]);for(var u=Array(n),a=0,c=-1,f=new this(o);++c<n;)!function(e,o){t.resolve(e).then(function(e){u[o]=e,++a!==n||r||(r=!0,i.resolve(f,u))},function(e){r||(r=!0,i.reject(f,e))})}(e[c],c);return f},f.race=function(e){var t=this;if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(TypeError("must be an array"));var n=e.length,r=!1;if(!n)return this.resolve([]);for(var u=-1,a=new this(o);++u<n;)!function(e){t.resolve(e).then(function(e){r||(r=!0,i.resolve(a,e))},function(e){r||(r=!0,i.reject(a,e))})}(e[u]);return a}},{1:1}],3:[function(e,t,r){(function(t){"function"!=typeof t.Promise&&(t.Promise=e(2))}).call(this,void 0!==n?n:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{2:2}],4:[function(e,t,n){var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){/* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */try{if("undefined"!=typeof indexedDB)return indexedDB;if("undefined"!=typeof webkitIndexedDB)return webkitIndexedDB;if("undefined"!=typeof mozIndexedDB)return mozIndexedDB;if("undefined"!=typeof OIndexedDB)return OIndexedDB;if("undefined"!=typeof msIndexedDB)return msIndexedDB}catch(e){return}}();// Abstracts constructing a Blob object, so it also works in older
// browsers that don't support the native Blob constructor. (i.e.
// old QtWebKit versions, at least).
// Abstracts constructing a Blob object, so it also works in older
// browsers that don't support the native Blob constructor. (i.e.
// old QtWebKit versions, at least).
function i(e,t){/* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */e=e||[],t=t||{};try{return new Blob(e,t)}catch(o){if("TypeError"!==o.name)throw o;for(var n=new("undefined"!=typeof BlobBuilder?BlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder),r=0;r<e.length;r+=1)n.append(e[r]);return n.getBlob(t.type)}}"undefined"==typeof Promise&&// a global promise object, but it would throw anyway later.
e(3);var u=Promise;function a(e,t){t&&e.then(function(e){t(null,e)},function(e){t(e)})}function c(e,t,n){"function"==typeof t&&e.then(t),"function"==typeof n&&e.catch(n)}function f(e){return"string"!=typeof e&&(console.warn(e+" used as a key, but it is not a string."),e=String(e)),e}function s(){if(arguments.length&&"function"==typeof arguments[arguments.length-1])return arguments[arguments.length-1]}// Some code originally from async_storage.js in
// [Gaia](https://github.com/mozilla-b2g/gaia).
var l="local-forage-detect-blob-support",d=void 0,v={},h=Object.prototype.toString,p="readonly",y="readwrite";function b(e){var t=v[e.name],n={};n.promise=new u(function(e,t){n.resolve=e,n.reject=t}),// Enqueue the deferred operation.
t.deferredOperations.push(n),t.dbReady?t.dbReady=t.dbReady.then(function(){return n.promise}):t.dbReady=n.promise}function m(e){// Dequeue a deferred operation.
var t=v[e.name].deferredOperations.pop();// Resolve its promise (which is part of the database readiness
// chain of promises).
if(t)return t.resolve(),t.promise}function g(e,t){// Dequeue a deferred operation.
var n=v[e.name].deferredOperations.pop();// Reject its promise (which is part of the database readiness
// chain of promises).
if(n)return n.reject(t),n.promise}function _(e,t){return new u(function(n,r){if(v[e.name]=v[e.name]||R(),e.db){if(!t)return n(e.db);b(e),e.db.close()}var i=[e.name];t&&i.push(e.version);var u=o.open.apply(o,i);t&&(u.onupgradeneeded=function(t){var n=u.result;try{n.createObjectStore(e.storeName),t.oldVersion<=1&&n.createObjectStore(l)}catch(n){if("ConstraintError"===n.name)console.warn('The database "'+e.name+'" has been upgraded from version '+t.oldVersion+" to version "+t.newVersion+', but the storage "'+e.storeName+'" already exists.');else throw n}}),u.onerror=function(e){e.preventDefault(),r(u.error)},u.onsuccess=function(){var t=u.result;t.onversionchange=function(e){// Triggered when the database is modified (e.g. adding an objectStore) or
// deleted (even when initiated by other sessions in different tabs).
// Closing the connection here prevents those operations from being blocked.
// If the database is accessed again later by this instance, the connection
// will be reopened or the database recreated as needed.
e.target.close()},n(t),m(e)}})}function S(e,t){if(!e.db)return!0;var n=!e.db.objectStoreNames.contains(e.storeName),r=e.version<e.db.version,o=e.version>e.db.version;if(r&&(e.version!==t&&console.warn('The database "'+e.name+"\" can't be downgraded from version "+e.db.version+" to version "+e.version+"."),// Align the versions to prevent errors.
e.version=e.db.version),o||n){// If the store is new then increment the version (if needed).
// This will trigger an "upgradeneeded" event which is required
// for creating a store.
if(n){var i=e.db.version+1;i>e.version&&(e.version=i)}return!0}return!1}// decode an encoded blob
function w(e){return i([// Transform a binary string to an array buffer, because otherwise
// weird stuff happens when you try to work with the binary string directly.
// It is known.
// From http://stackoverflow.com/questions/14967647/ (continues on next line)
// encode-decode-image-with-base64-breaks-image (2013-04-21)
function(e){for(var t=e.length,n=new ArrayBuffer(t),r=new Uint8Array(n),o=0;o<t;o++)r[o]=e.charCodeAt(o);return n}(atob(e.data))],{type:e.type})}// is this one of our fancy encoded blobs?
function I(e){return e&&e.__local_forage_encoded_blob}// Specialize the default `ready()` function by making it dependent
// on the current database operations. Thus, the driver will be actually
// ready when it's been initialized (default) *and* there are no pending
// operations on the database (initiated by some other instances).
function E(e){var t=this,n=t._initReady().then(function(){var e=v[t._dbInfo.name];if(e&&e.dbReady)return e.dbReady});return c(n,e,e),n}// FF doesn't like Promises (micro-tasks) and IDDB store operations,
// so we have to do it with callbacks
function x(e,t,n,r){void 0===r&&(r=1);try{var o=e.db.transaction(e.storeName,t);n(null,o)}catch(o){if(r>0&&(!e.db||"InvalidStateError"===o.name||"NotFoundError"===o.name))return u.resolve().then(function(){if(!e.db||"NotFoundError"===o.name&&!e.db.objectStoreNames.contains(e.storeName)&&e.version<=e.db.version)// Reopen the database for upgrading.
return e.db&&(e.version=e.db.version+1),_(e,!0)}).then(function(){return(// Try to establish a new db connection to replace the
// current one which is broken (i.e. experiencing
// InvalidStateError while creating a transaction).
(function(e){b(e);for(var t=v[e.name],n=t.forages,r=0;r<n.length;r++){var o=n[r];o._dbInfo.db&&(o._dbInfo.db.close(),o._dbInfo.db=null)}return e.db=null,_(e,!1).then(function(t){return(e.db=t,S(e))?_(e,!0):t}).then(function(r){// store the latest db reference
// in case the db was upgraded
e.db=t.db=r;for(var o=0;o<n.length;o++)n[o]._dbInfo.db=r}).catch(function(t){throw g(e,t),t})})(e).then(function(){x(e,t,n,r-1)}))}).catch(n);n(o)}}function R(){return{// Running localForages sharing a database.
forages:[],// Shared database.
db:null,// Database readiness (promise).
dbReady:null,// Deferred operations on the database.
deferredOperations:[]}}var j={_driver:"asyncStorage",_initStorage:// Open the IndexedDB database (automatically creates one if one didn't
// previously exist), using any options set in the config.
function(e){var t=this,n={db:null};if(e)for(var r in e)n[r]=e[r];// Get the current context of the database;
var o=v[n.name];o||(o=R(),// Register the new context in the global container.
v[n.name]=o),// Register itself as a running localForage in the current context.
o.forages.push(t),t._initReady||(t._initReady=t.ready,t.ready=E);// Create an array of initialization states of the related localForages.
var i=[];function a(){// Don't handle errors here,
// just makes sure related localForages aren't pending.
return u.resolve()}for(var c=0;c<o.forages.length;c++){var f=o.forages[c];f!==t&&i.push(f._initReady().catch(a))}// Take a snapshot of the related localForages.
var s=o.forages.slice(0);// Initialize the connection process only when
// all the related localForages aren't pending.
return u.all(i).then(function(){// Get the connection or open a new one without upgrade.
return n.db=o.db,_(n,!1)}).then(function(e){return(n.db=e,S(n,t._defaultConfig.version))?_(n,!0):e}).then(function(e){n.db=o.db=e,t._dbInfo=n;// Share the final connection amongst related localForages.
for(var r=0;r<s.length;r++){var i=s[r];i!==t&&(// Self is already up-to-date.
i._dbInfo.db=n.db,i._dbInfo.version=n.version)}})},_support:function(){try{// Initialize IndexedDB; fall back to vendor-prefixed versions
// if needed.
if(!o||!o.open)return!1;// We mimic PouchDB here;
//
// We test for openDatabase because IE Mobile identifies itself
// as Safari. Oh the lulz...
var e="undefined"!=typeof openDatabase&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform),t="function"==typeof fetch&&-1!==fetch.toString().indexOf("[native code");// Safari <10.1 does not meet our requirements for IDB support
// (see: https://github.com/pouchdb/pouchdb/issues/5572).
// Safari 10.1 shipped with fetch, we can use that to detect it.
// Note: this creates issues with `window.fetch` polyfills and
// overrides; see:
// https://github.com/localForage/localForage/issues/856
return(!e||t)&&"undefined"!=typeof indexedDB&&// some outdated implementations of IDB that appear on Samsung
// and HTC Android devices <4.4 are missing IDBKeyRange
// See: https://github.com/mozilla/localForage/issues/128
// See: https://github.com/mozilla/localForage/issues/272
"undefined"!=typeof IDBKeyRange}catch(e){return!1}}(),iterate:// Iterate over all items stored in database.
function(e,t){var n=this,r=new u(function(t,r){n.ready().then(function(){x(n._dbInfo,p,function(o,i){if(o)return r(o);try{var u=i.objectStore(n._dbInfo.storeName).openCursor(),a=1;u.onsuccess=function(){var n=u.result;if(n){var r=n.value;I(r)&&(r=w(r));var o=e(r,n.key,a++);void 0!==o?t(o):n.continue()}else t()},u.onerror=function(){r(u.error)}}catch(e){r(e)}})}).catch(r)});return a(r,t),r},getItem:function(e,t){var n=this;e=f(e);var r=new u(function(t,r){n.ready().then(function(){x(n._dbInfo,p,function(o,i){if(o)return r(o);try{var u=i.objectStore(n._dbInfo.storeName).get(e);u.onsuccess=function(){var e=u.result;void 0===e&&(e=null),I(e)&&(e=w(e)),t(e)},u.onerror=function(){r(u.error)}}catch(e){r(e)}})}).catch(r)});return a(r,t),r},setItem:function(e,t,n){var r=this;e=f(e);var o=new u(function(n,o){var a;r.ready().then(function(){var e;return(a=r._dbInfo,"[object Blob]"===h.call(t))?(e=a.db,"boolean"==typeof d?u.resolve(d):new u(function(t){var n=e.transaction(l,y),r=i([""]);n.objectStore(l).put(r,"key"),n.onabort=function(e){// If the transaction aborts now its due to not being able to
// write to the database, likely due to the disk being full
e.preventDefault(),e.stopPropagation(),t(!1)},n.oncomplete=function(){var e=navigator.userAgent.match(/Chrome\/(\d+)/);// MS Edge pretends to be Chrome 42:
// https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx
t(navigator.userAgent.match(/Edge\//)||!e||parseInt(e[1],10)>=43)}}).catch(function(){return!1;// error, so assume unsupported
}).then(function(e){return d=e})).then(function(e){return e?t:new u(function(e,n){var r=new FileReader;r.onerror=n,r.onloadend=function(n){e({__local_forage_encoded_blob:!0,data:btoa(n.target.result||""),type:t.type})},r.readAsBinaryString(t)})}):t}).then(function(t){x(r._dbInfo,y,function(i,u){if(i)return o(i);try{var a=u.objectStore(r._dbInfo.storeName);null===t&&(t=void 0);var c=a.put(t,e);u.oncomplete=function(){void 0===t&&(t=null),n(t)},u.onabort=u.onerror=function(){var e=c.error?c.error:c.transaction.error;o(e)}}catch(e){o(e)}})}).catch(o)});return a(o,n),o},removeItem:function(e,t){var n=this;e=f(e);var r=new u(function(t,r){n.ready().then(function(){x(n._dbInfo,y,function(o,i){if(o)return r(o);try{// We use a Grunt task to make this safe for IE and some
// versions of Android (including those used by Cordova).
// Normally IE won't like `.delete()` and will insist on
// using `['delete']()`, but we have a build step that
// fixes this for us now.
var u=i.objectStore(n._dbInfo.storeName).delete(e);i.oncomplete=function(){t()},i.onerror=function(){r(u.error)},// The request will be also be aborted if we've exceeded our storage
// space.
i.onabort=function(){var e=u.error?u.error:u.transaction.error;r(e)}}catch(e){r(e)}})}).catch(r)});return a(r,t),r},clear:function(e){var t=this,n=new u(function(e,n){t.ready().then(function(){x(t._dbInfo,y,function(r,o){if(r)return n(r);try{var i=o.objectStore(t._dbInfo.storeName).clear();o.oncomplete=function(){e()},o.onabort=o.onerror=function(){var e=i.error?i.error:i.transaction.error;n(e)}}catch(e){n(e)}})}).catch(n)});return a(n,e),n},length:function(e){var t=this,n=new u(function(e,n){t.ready().then(function(){x(t._dbInfo,p,function(r,o){if(r)return n(r);try{var i=o.objectStore(t._dbInfo.storeName).count();i.onsuccess=function(){e(i.result)},i.onerror=function(){n(i.error)}}catch(e){n(e)}})}).catch(n)});return a(n,e),n},key:function(e,t){var n=this,r=new u(function(t,r){if(e<0){t(null);return}n.ready().then(function(){x(n._dbInfo,p,function(o,i){if(o)return r(o);try{var u=i.objectStore(n._dbInfo.storeName),a=!1,c=u.openKeyCursor();c.onsuccess=function(){var n=c.result;if(!n){// this means there weren't enough keys
t(null);return}0===e?// wanted.
t(n.key):a?t(n.key):(// Otherwise, ask the cursor to skip ahead n
// records.
a=!0,n.advance(e))},c.onerror=function(){r(c.error)}}catch(e){r(e)}})}).catch(r)});return a(r,t),r},keys:function(e){var t=this,n=new u(function(e,n){t.ready().then(function(){x(t._dbInfo,p,function(r,o){if(r)return n(r);try{var i=o.objectStore(t._dbInfo.storeName).openKeyCursor(),u=[];i.onsuccess=function(){var t=i.result;if(!t){e(u);return}u.push(t.key),t.continue()},i.onerror=function(){n(i.error)}}catch(e){n(e)}})}).catch(n)});return a(n,e),n},dropInstance:function(e,t){t=s.apply(this,arguments);var n,r=this.config();if((e="function"!=typeof e&&e||{}).name||(e.name=e.name||r.name,e.storeName=e.storeName||r.storeName),e.name){var i=e.name===r.name&&this._dbInfo.db?u.resolve(this._dbInfo.db):_(e,!1).then(function(t){var n=v[e.name],r=n.forages;n.db=t;for(var o=0;o<r.length;o++)r[o]._dbInfo.db=t;return t});n=e.storeName?i.then(function(t){if(t.objectStoreNames.contains(e.storeName)){var n=t.version+1;b(e);var r=v[e.name],i=r.forages;t.close();for(var a=0;a<i.length;a++){var c=i[a];c._dbInfo.db=null,c._dbInfo.version=n}return new u(function(t,r){var i=o.open(e.name,n);i.onerror=function(e){i.result.close(),r(e)},i.onupgradeneeded=function(){i.result.deleteObjectStore(e.storeName)},i.onsuccess=function(){var e=i.result;e.close(),t(e)}}).then(function(e){r.db=e;for(var t=0;t<i.length;t++){var n=i[t];n._dbInfo.db=e,m(n._dbInfo)}}).catch(function(t){throw(g(e,t)||u.resolve()).catch(function(){}),t})}}):i.then(function(t){b(e);var n=v[e.name],r=n.forages;t.close();for(var i=0;i<r.length;i++)r[i]._dbInfo.db=null;return new u(function(t,n){var r=o.deleteDatabase(e.name);r.onerror=function(){var e=r.result;e&&e.close(),n(r.error)},r.onblocked=function(){// Closing all open connections in onversionchange handler should prevent this situation, but if
// we do get here, it just means the request remains pending - eventually it will succeed or error
console.warn('dropInstance blocked for database "'+e.name+'" until all open connections are closed')},r.onsuccess=function(){var e=r.result;e&&e.close(),t(e)}}).then(function(e){n.db=e;for(var t=0;t<r.length;t++)m(r[t]._dbInfo)}).catch(function(t){throw(g(e,t)||u.resolve()).catch(function(){}),t})})}else n=u.reject("Invalid arguments");return a(n,t),n}},N="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",O=/^~~local_forage_type~([^~]+)~/,A="__lfsc__:",k=A.length,D="arbf",C="blob",T="si08",B="ui08",F="uic8",L="si16",P="si32",M="ur16",U="ui32",z="fl32",q="fl64",H=k+D.length,$=Object.prototype.toString;function W(e){// Fill the string into a ArrayBuffer.
var t,n,r,o,i,u=.75*e.length,a=e.length,c=0;"="===e[e.length-1]&&(u--,"="===e[e.length-2]&&u--);var f=new ArrayBuffer(u),s=new Uint8Array(f);for(t=0;t<a;t+=4)n=N.indexOf(e[t]),r=N.indexOf(e[t+1]),o=N.indexOf(e[t+2]),i=N.indexOf(e[t+3]),/*jslint bitwise: true */s[c++]=n<<2|r>>4,s[c++]=(15&r)<<4|o>>2,s[c++]=(3&o)<<6|63&i;return f}// Converts a buffer to a string to store, serialized, in the backend
// storage library.
function V(e){// base64-arraybuffer
var t,n=new Uint8Array(e),r="";for(t=0;t<n.length;t+=3)r+=N[n[t]>>2]+N[(3&n[t])<<4|n[t+1]>>4]+N[(15&n[t+1])<<2|n[t+2]>>6]+N[63&n[t+2]];return n.length%3==2?r=r.substring(0,r.length-1)+"=":n.length%3==1&&(r=r.substring(0,r.length-2)+"=="),r}var K={serialize:// Serialize a value, afterwards executing a callback (which usually
// instructs the `setItem()` callback/promise to be executed). This is how
// we store binary data with localStorage.
function(e,t){var n="";// Cannot use `value instanceof ArrayBuffer` or such here, as these
// checks fail when running the tests using casper.js...
//
// TODO: See why those tests fail and use a better solution.
if(e&&(n=$.call(e)),e&&("[object ArrayBuffer]"===n||e.buffer&&"[object ArrayBuffer]"===$.call(e.buffer))){var r,o=A;e instanceof ArrayBuffer?(r=e,o+=D):(r=e.buffer,"[object Int8Array]"===n?o+=T:"[object Uint8Array]"===n?o+=B:"[object Uint8ClampedArray]"===n?o+=F:"[object Int16Array]"===n?o+=L:"[object Uint16Array]"===n?o+=M:"[object Int32Array]"===n?o+=P:"[object Uint32Array]"===n?o+=U:"[object Float32Array]"===n?o+=z:"[object Float64Array]"===n?o+=q:t(Error("Failed to get type for BinaryArray"))),t(o+V(r))}else if("[object Blob]"===n){// Conver the blob to a binaryArray and then to a string.
var i=new FileReader;i.onload=function(){t(A+C+("~~local_forage_type~"+e.type)+"~"+V(this.result))},i.readAsArrayBuffer(e)}else try{t(JSON.stringify(e))}catch(n){console.error("Couldn't convert value into a JSON string: ",e),t(null,n)}},deserialize:// Deserialize data we've inserted into a value column/field. We place
// special markers into our strings to mark them as encoded; this isn't
// as nice as a meta field, but it's the only sane thing we can do whilst
// keeping localStorage support intact.
//
// Oftentimes this will just deserialize JSON content, but if we have a
// special marker (SERIALIZED_MARKER, defined above), we will extract
// some kind of arraybuffer/binary data/typed array out of the string.
function(e){// If we haven't marked this string as being specially serialized (i.e.
// something other than serialized JSON), we can just return it and be
// done with it.
if(e.substring(0,k)!==A)return JSON.parse(e);// The following code deals with deserializing some kind of Blob or
// TypedArray. First we separate out the type of data we're dealing
// with from the data itself.
var t,n=e.substring(H),r=e.substring(k,H);// Backwards-compatible blob type serialization strategy.
// DBs created with older versions of localForage will simply not have the blob type.
if(r===C&&O.test(n)){var o=n.match(O);t=o[1],n=n.substring(o[0].length)}var u=W(n);// Return the right type based on the code/type set during
// serialization.
switch(r){case D:return u;case C:return i([u],{type:t});case T:return new Int8Array(u);case B:return new Uint8Array(u);case F:return new Uint8ClampedArray(u);case L:return new Int16Array(u);case M:return new Uint16Array(u);case P:return new Int32Array(u);case U:return new Uint32Array(u);case z:return new Float32Array(u);case q:return new Float64Array(u);default:throw Error("Unkown type: "+r)}},stringToBuffer:W,bufferToString:V};/*
 * Includes code from:
 *
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */function Q(e,t,n,r){e.executeSql("CREATE TABLE IF NOT EXISTS "+t.storeName+" (id INTEGER PRIMARY KEY, key unique, value)",[],n,r)}function X(e,t,n,r,o,i){e.executeSql(n,r,o,function(e,u){u.code===u.SYNTAX_ERR?e.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?",[t.storeName],function(e,a){a.rows.length?i(e,u):// re-create it table and retry
Q(e,t,function(){e.executeSql(n,r,o,i)},i)},i):i(e,u)},i)}function Y(e,t,n,r){var o=this;e=f(e);var i=new u(function(i,u){o.ready().then(function(){void 0===t&&(t=null);// Save the original value to pass to the callback.
var a=t,c=o._dbInfo;c.serializer.serialize(t,function(t,f){f?u(f):c.db.transaction(function(n){X(n,c,"INSERT OR REPLACE INTO "+c.storeName+" (key, value) VALUES (?, ?)",[e,t],function(){i(a)},function(e,t){u(t)})},function(t){// The transaction failed; check
// to see if it's a quota error.
if(t.code===t.QUOTA_ERR){// We reject the callback outright for now, but
// it's worth trying to re-run the transaction.
// Even if the user accepts the prompt to use
// more storage on Safari, this error will
// be called.
//
// Try to re-run the transaction.
if(r>0){i(Y.apply(o,[e,a,n,r-1]));return}u(t)}})})}).catch(u)});return a(i,n),i}var G={_driver:"webSQLStorage",_initStorage:// Open the WebSQL database (automatically creates one if one didn't
// previously exist), using any options set in the config.
function(e){var t=this,n={db:null};if(e)for(var r in e)n[r]="string"!=typeof e[r]?e[r].toString():e[r];var o=new u(function(e,r){// Open the database; the openDatabase API will automatically
// create it for us if it doesn't exist.
try{n.db=openDatabase(n.name,String(n.version),n.description,n.size)}catch(e){return r(e)}// Create our key/value table if it doesn't exist.
n.db.transaction(function(o){Q(o,n,function(){t._dbInfo=n,e()},function(e,t){r(t)})},r)});return n.serializer=K,o},_support:"function"==typeof openDatabase,iterate:function(e,t){var n=this,r=new u(function(t,r){n.ready().then(function(){var o=n._dbInfo;o.db.transaction(function(n){X(n,o,"SELECT * FROM "+o.storeName,[],function(n,r){for(var i=r.rows,u=i.length,a=0;a<u;a++){var c=i.item(a),f=c.value;// void(0) prevents problems with redefinition
// of `undefined`.
if(f&&(f=o.serializer.deserialize(f)),void 0!==(f=e(f,c.key,a+1))){t(f);return}}t()},function(e,t){r(t)})})}).catch(r)});return a(r,t),r},getItem:function(e,t){var n=this;e=f(e);var r=new u(function(t,r){n.ready().then(function(){var o=n._dbInfo;o.db.transaction(function(n){X(n,o,"SELECT * FROM "+o.storeName+" WHERE key = ? LIMIT 1",[e],function(e,n){var r=n.rows.length?n.rows.item(0).value:null;r&&(r=o.serializer.deserialize(r)),t(r)},function(e,t){r(t)})})}).catch(r)});return a(r,t),r},setItem:function(e,t,n){return Y.apply(this,[e,t,n,1])},removeItem:function(e,t){var n=this;e=f(e);var r=new u(function(t,r){n.ready().then(function(){var o=n._dbInfo;o.db.transaction(function(n){X(n,o,"DELETE FROM "+o.storeName+" WHERE key = ?",[e],function(){t()},function(e,t){r(t)})})}).catch(r)});return a(r,t),r},clear:// Deletes every item in the table.
// TODO: Find out if this resets the AUTO_INCREMENT number.
function(e){var t=this,n=new u(function(e,n){t.ready().then(function(){var r=t._dbInfo;r.db.transaction(function(t){X(t,r,"DELETE FROM "+r.storeName,[],function(){e()},function(e,t){n(t)})})}).catch(n)});return a(n,e),n},length:// Does a simple `COUNT(key)` to get the number of items stored in
// localForage.
function(e){var t=this,n=new u(function(e,n){t.ready().then(function(){var r=t._dbInfo;r.db.transaction(function(t){// Ahhh, SQL makes this one soooooo easy.
X(t,r,"SELECT COUNT(key) as c FROM "+r.storeName,[],function(t,n){e(n.rows.item(0).c)},function(e,t){n(t)})})}).catch(n)});return a(n,e),n},key:// Return the key located at key index X; essentially gets the key from a
// `WHERE id = ?`. This is the most efficient way I can think to implement
// this rarely-used (in my experience) part of the API, but it can seem
// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so
// the ID of each key will change every time it's updated. Perhaps a stored
// procedure for the `setItem()` SQL would solve this problem?
// TODO: Don't change ID on `setItem()`.
function(e,t){var n=this,r=new u(function(t,r){n.ready().then(function(){var o=n._dbInfo;o.db.transaction(function(n){X(n,o,"SELECT key FROM "+o.storeName+" WHERE id = ? LIMIT 1",[e+1],function(e,n){t(n.rows.length?n.rows.item(0).key:null)},function(e,t){r(t)})})}).catch(r)});return a(r,t),r},keys:function(e){var t=this,n=new u(function(e,n){t.ready().then(function(){var r=t._dbInfo;r.db.transaction(function(t){X(t,r,"SELECT key FROM "+r.storeName,[],function(t,n){for(var r=[],o=0;o<n.rows.length;o++)r.push(n.rows.item(o).key);e(r)},function(e,t){n(t)})})}).catch(n)});return a(n,e),n},dropInstance:function(e,t){t=s.apply(this,arguments);var n,r=this.config();(e="function"!=typeof e&&e||{}).name||(e.name=e.name||r.name,e.storeName=e.storeName||r.storeName);var o=this;return a(n=e.name?new u(function(t){var n;t((n=e.name===r.name?o._dbInfo.db:openDatabase(e.name,"","",0),e.storeName)?{db:n,storeNames:[e.storeName]}:new u(function(e,t){n.transaction(function(r){r.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'",[],function(t,r){for(var o=[],i=0;i<r.rows.length;i++)o.push(r.rows.item(i).name);e({db:n,storeNames:o})},function(e,n){t(n)})},function(e){t(e)})}))}).then(function(e){return new u(function(t,n){e.db.transaction(function(r){for(var o=[],i=0,a=e.storeNames.length;i<a;i++)o.push(function(e){return new u(function(t,n){r.executeSql("DROP TABLE IF EXISTS "+e,[],function(){t()},function(e,t){n(t)})})}(e.storeNames[i]));u.all(o).then(function(){t()}).catch(function(e){n(e)})},function(e){n(e)})})}):u.reject("Invalid arguments"),t),n}};function J(e,t){var n=e.name+"/";return e.storeName!==t.storeName&&(n+=e.storeName+"/"),n}var Z={_driver:"localStorageWrapper",_initStorage:// Config the localStorage backend, using options set in the config.
function(e){var t={};if(e)for(var n in e)t[n]=e[n];return(t.keyPrefix=J(e,this._defaultConfig),!// Check if localStorage throws when saving an item
function(){var e="_localforage_support_test";try{return localStorage.setItem(e,!0),localStorage.removeItem(e),!1}catch(e){return!0}}()||localStorage.length>0)?(this._dbInfo=t,t.serializer=K,u.resolve()):u.reject()},_support:function(){try{return"undefined"!=typeof localStorage&&"setItem"in localStorage&&// in IE8 typeof localStorage.setItem === 'object'
!!localStorage.setItem}catch(e){return!1}}(),iterate:// Iterate over all items in the store.
function(e,t){var n=this,r=n.ready().then(function(){for(var t=n._dbInfo,r=t.keyPrefix,o=r.length,i=localStorage.length,u=1,a=0;a<i;a++){var c=localStorage.key(a);if(0===c.indexOf(r)){var f=localStorage.getItem(c);if(f&&(f=t.serializer.deserialize(f)),void 0!==(f=e(f,c.substring(o),u++)))return f}}});return a(r,t),r},getItem:// Retrieve an item from the store. Unlike the original async_storage
// library in Gaia, we don't modify return values at all. If a key's value
// is `undefined`, we pass that value to the callback function.
function(e,t){var n=this;e=f(e);var r=n.ready().then(function(){var t=n._dbInfo,r=localStorage.getItem(t.keyPrefix+e);return r&&(r=t.serializer.deserialize(r)),r});return a(r,t),r},setItem:// Set a key's value and run an optional callback once the value is set.
// Unlike Gaia's implementation, the callback function is passed the value,
// in case you want to operate on that value only after you're sure it
// saved, or something like that.
function(e,t,n){var r=this;e=f(e);var o=r.ready().then(function(){void 0===t&&(t=null);// Save the original value to pass to the callback.
var n=t;return new u(function(o,i){var u=r._dbInfo;u.serializer.serialize(t,function(t,r){if(r)i(r);else try{localStorage.setItem(u.keyPrefix+e,t),o(n)}catch(e){("QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&i(e),i(e)}})})});return a(o,n),o},removeItem:// Remove an item from the store, nice and simple.
function(e,t){var n=this;e=f(e);var r=n.ready().then(function(){var t=n._dbInfo;localStorage.removeItem(t.keyPrefix+e)});return a(r,t),r},clear:// Remove all keys from the datastore, effectively destroying all data in
// the app's key/value store!
function(e){var t=this,n=t.ready().then(function(){for(var e=t._dbInfo.keyPrefix,n=localStorage.length-1;n>=0;n--){var r=localStorage.key(n);0===r.indexOf(e)&&localStorage.removeItem(r)}});return a(n,e),n},length:// Supply the number of keys in the datastore to the callback function.
function(e){var t=this.keys().then(function(e){return e.length});return a(t,e),t},key:// Same as localStorage's key() method, except takes a callback.
function(e,t){var n=this,r=n.ready().then(function(){var t,r=n._dbInfo;try{t=localStorage.key(e)}catch(e){t=null}return t&&(t=t.substring(r.keyPrefix.length)),t});return a(r,t),r},keys:function(e){var t=this,n=t.ready().then(function(){for(var e=t._dbInfo,n=localStorage.length,r=[],o=0;o<n;o++){var i=localStorage.key(o);0===i.indexOf(e.keyPrefix)&&r.push(i.substring(e.keyPrefix.length))}return r});return a(n,e),n},dropInstance:function(e,t){if(t=s.apply(this,arguments),!(e="function"!=typeof e&&e||{}).name){var n,r=this.config();e.name=e.name||r.name,e.storeName=e.storeName||r.storeName}var o=this;return a(n=e.name?new u(function(t){t(e.storeName?J(e,o._defaultConfig):e.name+"/")}).then(function(e){for(var t=localStorage.length-1;t>=0;t--){var n=localStorage.key(t);0===n.indexOf(e)&&localStorage.removeItem(n)}}):u.reject("Invalid arguments"),t),n}},ee=function(e,t){for(var n,r=e.length,o=0;o<r;){if((n=e[o])===t||"number"==typeof n&&"number"==typeof t&&isNaN(n)&&isNaN(t))return!0;o++}return!1},et=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)},en={},er={},eo={INDEXEDDB:j,WEBSQL:G,LOCALSTORAGE:Z},ei=[eo.INDEXEDDB._driver,eo.WEBSQL._driver,eo.LOCALSTORAGE._driver],eu=["dropInstance"],ea=["clear","getItem","iterate","key","keys","length","removeItem","setItem"].concat(eu),ec={description:"",driver:ei.slice(),name:"localforage",// Default DB size is _JUST UNDER_ 5MB, as it's the highest size
// we can use without a prompt.
size:4980736,storeName:"keyvaluepairs",version:1};function ef(){for(var e=1;e<arguments.length;e++){var t=arguments[e];if(t)for(var n in t)t.hasOwnProperty(n)&&(et(t[n])?arguments[0][n]=t[n].slice():arguments[0][n]=t[n])}return arguments[0]}// The actual localForage object that we expose as a module or via a
// global. It's extended by pulling in one of our other libraries.
var es=new(function(){function e(t){for(var n in!function(e,t){if(!(e instanceof t))throw TypeError("Cannot call a class as a function")}(this,e),eo)if(eo.hasOwnProperty(n)){var r=eo[n],o=r._driver;this[n]=o,en[o]||// since the default drivers can be defined
// in a blocking manner
this.defineDriver(r)}this._defaultConfig=ef({},ec),this._config=ef({},this._defaultConfig,t),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch(function(){})}return(// Set any config values for localForage; can be called anytime before
// the first API call (e.g. `getItem`, `setItem`).
// We loop through options so we don't overwrite existing config
// values.
e.prototype.config=function(e){// If the options argument is an object, we use it to set values.
// Otherwise, we return either a specified config value or all
// config values.
if((void 0===e?"undefined":r(e))==="object"){// If localforage is ready and fully initialized, we can't set
// any new configuration values. Instead, we return an error.
if(this._ready)return Error("Can't call config() after localforage has been used.");for(var t in e){if("storeName"===t&&(e[t]=e[t].replace(/\W/g,"_")),"version"===t&&"number"!=typeof e[t])return Error("Database version must be a number.");this._config[t]=e[t]}return(// after all config options are set and
// the driver option is used, try setting it
!("driver"in e)||!e.driver||this.setDriver(this._config.driver))}return"string"==typeof e?this._config[e]:this._config},// Used to define a custom driver, shared across all instances of
// localForage.
e.prototype.defineDriver=function(e,t,n){var r=new u(function(t,n){try{var r=e._driver,o=Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");// A driver name should be defined and not overlap with the
// library-defined, default drivers.
if(!e._driver){n(o);return}for(var i=ea.concat("_initStorage"),c=0,f=i.length;c<f;c++){var s=i[c];if((!ee(eu,s)||e[s])&&"function"!=typeof e[s]){n(o);return}}!function(){for(var t=function(e){return function(){var t=Error("Method "+e+" is not implemented by the current driver"),n=u.reject(t);return a(n,arguments[arguments.length-1]),n}},n=0,r=eu.length;n<r;n++){var o=eu[n];e[o]||(e[o]=t(o))}}();var l=function(n){en[r]&&console.info("Redefining LocalForage driver: "+r),en[r]=e,er[r]=n,// don't use a then, so that we can define
// drivers that have simple _support methods
// in a blocking manner
t()};"_support"in e?e._support&&"function"==typeof e._support?e._support().then(l,n):l(!!e._support):l(!0)}catch(e){n(e)}});return c(r,t,n),r},e.prototype.driver=function(){return this._driver||null},e.prototype.getDriver=function(e,t,n){var r=en[e]?u.resolve(en[e]):u.reject(Error("Driver not found."));return c(r,t,n),r},e.prototype.getSerializer=function(e){var t=u.resolve(K);return c(t,e),t},e.prototype.ready=function(e){var t=this,n=t._driverSet.then(function(){return null===t._ready&&(t._ready=t._initDriver()),t._ready});return c(n,e,e),n},e.prototype.setDriver=function(e,t,n){var r=this;et(e)||(e=[e]);var o=this._getSupportedDrivers(e);function i(){r._config.driver=r.driver()}function a(e){return r._extend(e),i(),r._ready=r._initStorage(r._config),r._ready}// There might be a driver initialization in progress
// so wait for it to finish in order to avoid a possible
// race condition to set _dbInfo
var f=null!==this._driverSet?this._driverSet.catch(function(){return u.resolve()}):u.resolve();return this._driverSet=f.then(function(){var e=o[0];return r._dbInfo=null,r._ready=null,r.getDriver(e).then(function(e){r._driver=e._driver,i(),r._wrapLibraryMethodsWithReady(),r._initDriver=function(){var e=0;return function t(){for(;e<o.length;){var n=o[e];return e++,r._dbInfo=null,r._ready=null,r.getDriver(n).then(a).catch(t)}i();var c=Error("No available storage method found.");return r._driverSet=u.reject(c),r._driverSet}()}})}).catch(function(){i();var e=Error("No available storage method found.");return r._driverSet=u.reject(e),r._driverSet}),c(this._driverSet,t,n),this._driverSet},e.prototype.supports=function(e){return!!er[e]},e.prototype._extend=function(e){ef(this,e)},e.prototype._getSupportedDrivers=function(e){for(var t=[],n=0,r=e.length;n<r;n++){var o=e[n];this.supports(o)&&t.push(o)}return t},e.prototype._wrapLibraryMethodsWithReady=function(){// Add a stub for each driver API method that delays the call to the
// corresponding driver method until localForage is ready. These stubs
// will be replaced by the driver methods as soon as the driver is
// loaded, so there is no performance impact.
for(var e=0,t=ea.length;e<t;e++)!function(e,t){e[t]=function(){var n=arguments;return e.ready().then(function(){return e[t].apply(e,n)})}}(this,ea[e])},e.prototype.createInstance=function(t){return new e(t)},e)}());t.exports=es},{3:3}]},{},[4])(4),i("enmjz"),/*@__PURE__*/t(c).config({driver:/*@__PURE__*/t(c).INDEXEDDB,name:"exercise-studio",version:1});let f="DIRECTORY_HANDLES",s={handles:[]};/* MAKE STUFF AVAILABLE OFFLINE */async function l(){let e=await caches.open(a);await e.addAll(u)}async function d(){let e=await caches.keys();await Promise.all([...e.map(e=>e!==a&&caches.delete(e)),self.clients.claim()])}async function v(e){switch(e.type){case"StoreFSHandle":let n=await Promise.all(s.handles.map(t=>t.isSameEntry(e.data)));if(!1===n.includes(!0)){var r;s.handles.push(e.data),r=s.handles,/*@__PURE__*/t(c).setItem(f,r)}break;case"RequestFSHandles":if(s.handles=await /*@__PURE__*/t(c).getItem(f)??[],s.handles.length>0)return{type:"FSHandles",data:s.handles}}}self.addEventListener("install",e=>e.waitUntil(l())),self.addEventListener("activate",e=>e.waitUntil(d())),self.addEventListener("fetch",function(e){let t=t=>fetch(e.request).then(function(n){return t?.put(e.request,n.clone()),n});e.respondWith(caches.open(a).then(function(n){return n.match(e.request).then(function(r){return e.request,r||t(n)})}))}),self.addEventListener("message",async e=>{let t=e.data,n=await v(t);n&&e.source?.postMessage(n)})}();//# sourceMappingURL=sw.js.map

//# sourceMappingURL=sw.js.map
